{% extends 'base.html.twig' %}
{% form_theme form _self %}
{% block title %}Hello edit !
{% endblock %}

{% block stylesheets %}
	{{parent()}}
	<link rel="stylesheet" href="/account/login.css">
	<link rel="stylesheet" href="/account/intl-tel-input/build/css/intlTelInput.min.css">
	<style>
		.card-title {
			padding-top: 1rem;
		}
		.userImage{
			width:100px;
			height:100px;
		}
	</style>
{% endblock %}

{% block body %}


		<div class="row">
			<div class="col s10 offset-s1">
				<div class="card">
					<div class="card-title">
						<h5 class=" center">Register</h5>
					</div>
					<div class="card-content">
						{{form_start(form)}}
						{{form_widget(form)}}
						<p>
							<label>
								<input type="checkbox"/>
								<span>I agree to the terms of service</span>
							</label>
						</p>
						<button name="" type="submit" id="submit" class="btn btn-primary" href="#" role="button">Register</button>

						{{form_end(form)}}
					</div>


				</div>
			</div>
	

	{% endblock %}

	


 	{% block _setting_file_widget %}
     
    <div class="col s8">
        <div class="file-field input-field">
            <div class="btn">
                <span>Photo</span>
                {{form_widget(form)}}
            </div>
            <div class="file-path-wrapper">
                <input class="file-path validate" type="text">
            </div>
            </div>
      </div>
    <div class="col s4 rigth-align">
       <img class="materialboxed userImage"  id="image_ahmad" />
    </div>
   
    
     
     
      
   
      
 {% endblock %}
	{% block javascripts %}
		{{parent()}}
		<script src="/account/intl-tel-input/build/js/intlTelInput.js"></script>
		<script>
			var input = document.querySelector("#setting_phone");
                    window.intlTelInput(input, {

                utilsScript: "/account/intl-tel-input/build/js/utils.js"
});
		</script>
		<script src="/account/editRegister.js"></script>
			<script src="/account/editPhoneCheck.js"></script>
		    <script src="/account/editCountry.js"></script>
		<script>
         document.addEventListener('DOMContentLoaded', function () {
             //////////////////////edit
                 // region
				let regionEdit = document.getElementById('setting_region');
				let instancesRegionEdit = M.FormSelect.init(regionEdit, {});
                // department
				let departmentEdit = document.getElementById('setting_department');
				let departmentsEdit = M.FormSelect.init(departmentEdit, {});
				//let instanceDepartmentsEdit = M.FormSelect.getInstance(department);
                //city
				let cityEdit = document.getElementById('setting_city');
				let instancesCityEdit = M.FormSelect.init(cityEdit, {});





				/////////////////////////image//////////////
				let test=document.getElementById(`setting_file_file`);
				console.log(test.value);
				  let href=document.querySelector('.vich-image').querySelector('a');
				  console.log(href.href)
                let img=document.getElementById(`image_ahmad`);
                img.src=href;
				
            document.getElementById(`setting_file_file`).onchange = function () {
                var reader = new FileReader();
                reader.onload = function (e) {
                    // get loaded data and render thumbnail.
                    document.getElementById(`image_ahmad`).src = e.target.result;
                    elemsImage = document.querySelectorAll('.materialboxed');
                   instanceselemsImage = M.Materialbox.init(elemsImage, {});
                };
                // read the image file as a data URL.
                reader.readAsDataURL(this.files[0]);
            };
			/////////////////////////////////city department/////////////////
           
			//console.log( document.getElementById('setting_department'))
			cityEdit.disabled=true;
			const getUrl=(type,typeId)=>{
							
							if(type=='department'){
									let url ="{{ path('location_department',{id:'typeId'}) }}";
										url = url.replace('typeId', typeId);
									return url;	
							}
							else if(type=='city'){
									let url ="{{ path('location_city',{id:'typeId'}) }}";
										url = url.replace('typeId', typeId);
									return url;	
							}
						
					}
			const fetchLocation = (url) => {
							
							let data = axios.get(url).then((response) => {
							return response.data;

							}).catch((err) => {
							console.log(err);
							})
                   return data;
           }
			  const populateSelect=(item,collection)=>{
                           let optionNode = document.createElement("option");
							optionNode.value = item.id;
							let textNode = document.createTextNode(item.name);
							optionNode.appendChild(textNode);
							collection.appendChild(optionNode);	
		         }
                 
				regionEdit.addEventListener('change', async (e) => {
					departmentEdit.disabled=false;
					departmentEdit.innerHTML='';
						let departmentData = await fetchLocation(getUrl('department',e.target.value));
					
						departmentData.forEach((departmentElment) => {
							populateSelect(departmentElment,departmentEdit);
						})
						M.FormSelect.init(departmentEdit, {});
				});	 

			departmentEdit.addEventListener('change',async(e)=>{
				cityEdit.disabled=false;
                   cityEdit.innerHTML='';
				   let cityData = await fetchLocation(getUrl('city',e.target.value));
						
						cityData.forEach((cityElment) => {
							
							populateSelect(cityElment,cityEdit);
						})
						M.FormSelect.init(cityEdit, {});

				})	




			


       });
		</script>
	{% endblock %}
