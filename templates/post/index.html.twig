{% extends 'base.html.twig' %}

{% block title %}Hello Post!
{% endblock %}
{% block stylesheets %}

	{{parent()}}
	<link rel="stylesheet" href="/css/post/postCard.css">
	<link rel="stylesheet" href="/css/component/spinner.css">
	<style>
		.card-title {
			padding-top: 1rem;
		}
		.likeBtn {
			
		  
		   background-color:transparent;
		   border-style: none;
		   
		
		}
		.flexbox {
			display: flex;
			flew-wrap: wrap;
			justify-content: center;
			align-items: center;
}
	</style>
{% endblock %}
{% block body %}

	    	
		<div class="row">
		  <div class="col s10 offset-s1">
		    <ul class="collapsible">
				<li>
					<div class="collapsible-header"><i class="material-icons">filter_list</i>Filter</div>
					<div class="collapsible-body">
					    {% include "search/index.html.twig" with {'form':form} %}
						<div class="row right-align">
							<a href={{path('home')}} class="btn-floating btn-small  waves-effect waves-light red ">
								<i class="material-icons">clear</i>
							</a>
						</div>	
					</div>
				</li>
				
           </ul>
		  </div>
		</div>
		<div class="row">
			{% for message in app.flashes('success') %}
				<div class=" col s8 offset-s2 center green">
					{{message}}
				</div>
			{% endfor %}
			{% if app.user %}
				<a href={{path('post_add')}} class="btn-floating btn-large waves-effect waves-light red postAdd">
					<i class="material-icons">add</i>
				</a>
			{% endif %}

		

			{% if usersToFollow|length > 0 %}

				<div class="collection col s10 offset-s1 ">
					<li class="collection-header center">
						<h4>Users Have The Most Posts</h4>
					</li>
					{% for userToFollow in usersToFollow %}
						<a href="{{path('following',{'id':userToFollow.user.id})}}" class="collection-item">
							<span class="new badge" data-badge-caption=" Posts">{{userToFollow.postCount}}</span>
							<i class="material-icons left">person_add</i>
							{{userToFollow.user.username}}</a>
					{% endfor %}

				</div>
			{% else %}
			
				{% for post in posts %}
					<div class="col s10 offset-s1">
						{% include "post/_postCard.html.twig" with {'post':post} %}
					</div>
				{% endfor %}

			{% endif %}


		</div>



{% endblock %}

{% block javascripts %}
	{{parent()}}
	
	<script>
					document.addEventListener('DOMContentLoaded', function () {
			var elems = document.querySelectorAll('.modal');
			var instances = M.Modal.init(elems, {});

                   var filter = document.querySelectorAll('.collapsible');
                 var instancesfilter = M.Collapsible.init(filter, {});
			
			});

			let btnPostDelete = document.querySelectorAll('.post-edit');
			let isClicked = false;
			const handelEventEdit = (event) => {

			if (isClicked) {
			event.target.classList.add('spinner');
			event.preventDefault();

			return;
			}
			isClicked = true;
			event.target.classList.remove('spinner');

			} 
			btnPostDelete.forEach((el) => {

			el.addEventListener('click', handelEventEdit)
			});


			let likes = document.querySelectorAll('button.like');
			let unlikes = document.querySelectorAll('button.unlike');

			function handelLike(e) {
		     
			 {% if not app.user %}
			   return window.location.replace("{{path('account_login')}}");
			 {% endif %}
			 

                this.disabled=true
			let icon = this.querySelector('i');
			let likeCount = this.querySelector('#likeCount');
			this.parentElement.setAttribute('disabled', true);
			
			// let a=e.target.closest('a');
			let url = this.dataset.href;
            console.log(url)
			axios.get(url).then((response) => {
              this.disabled=false
		 console.log(response.data)
			
			likeCount.innerText = response.data.likes;
			icon.innerText = response.data.message == 'added' ? 'favorite_border ' : 'favorite';

			}).catch((err) => {
			console.log(err)
			})

			e.preventDefault();
			}
			likes.forEach((el) => {
			el.addEventListener('click', handelLike);

			})
			unlikes.forEach((el) => {
			el.addEventListener('click', handelLike)
			})
	</script>
{% endblock %}
