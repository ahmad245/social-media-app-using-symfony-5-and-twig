{% extends 'base.html.twig' %}

{% block title %}Hello ProfileController!
{% endblock %}

{% block body %}
	<style>
		{{parent()}}
		.img-profile {
			height: 30rem !important;
		}
		.spinner {
    position: fixed;
    top: 0;
    left: 0;
    height: 100vh;
    width: 100%;
    z-index: 10000;
    display: flex;
    justify-content: center;
    align-items: center;
		}
		.lds-spinner {
  color: official;
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}
.lds-spinner div {
  transform-origin: 40px 40px;
  animation: lds-spinner 1.2s linear infinite;
}
.lds-spinner div:after {
  content: " ";
  display: block;
  position: absolute;
  top: 3px;
  left: 37px;
  width: 6px;
  height: 18px;
  border-radius: 20%;
  background: #E57373;
}
.lds-spinner div:nth-child(1) {
  transform: rotate(0deg);
  animation-delay: -1.1s;
}
.lds-spinner div:nth-child(2) {
  transform: rotate(30deg);
  animation-delay: -1s;
}
.lds-spinner div:nth-child(3) {
  transform: rotate(60deg);
  animation-delay: -0.9s;
}
.lds-spinner div:nth-child(4) {
  transform: rotate(90deg);
  animation-delay: -0.8s;
}
.lds-spinner div:nth-child(5) {
  transform: rotate(120deg);
  animation-delay: -0.7s;
}
.lds-spinner div:nth-child(6) {
  transform: rotate(150deg);
  animation-delay: -0.6s;
}
.lds-spinner div:nth-child(7) {
  transform: rotate(180deg);
  animation-delay: -0.5s;
}
.lds-spinner div:nth-child(8) {
  transform: rotate(210deg);
  animation-delay: -0.4s;
}
.lds-spinner div:nth-child(9) {
  transform: rotate(240deg);
  animation-delay: -0.3s;
}
.lds-spinner div:nth-child(10) {
  transform: rotate(270deg);
  animation-delay: -0.2s;
}
.lds-spinner div:nth-child(11) {
  transform: rotate(300deg);
  animation-delay: -0.1s;
}
.lds-spinner div:nth-child(12) {
  transform: rotate(330deg);
  animation-delay: 0s;
}
@keyframes lds-spinner {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

	</style>
	<div class="row">
		<div class="col s12 m12">
			<div class="card">
				<div class="card-image">
					<img class="responsive-img img-profile" src="/images/ah.jpg">
				</div>
				<div class="card-content">
					{% include "profile/info.html.twig" with {'user':user} %}
        </div>
        <div class="col s3">
        
									<a href="{{path('my_profile_follow',{'userId':user.id,'id':1})}}" class="waves-effect waves-light btn-small">
										<i class="material-icons left">person_outline</i>{{user.following|length |default('0')}} Following</a>	
        </div>
         <div class="col s3">
          		<a href="{{path('my_profile_follow',{'userId':user.id,'id':0})}}" class="waves-effect waves-light btn-small">
										<i class="material-icons left">person_add</i>{{user.followers|length |default('0')}}Followers</a>
        </div>
					<div class="card-tabs">
						<ul class="tabs tabs-fixed-width">
							<li class="tab">
								<a class="active"  href="#myPost" id="go">MyPost</a>
							</li>
							<li class="tab">
								<a  href="#myLikes" id="likePost">Likes</a>
							</li>
							<li class="tab">
								<a href="#test" id="commentPost" >Replies</a>
							</li>

						</ul>
					</div>
					<div class="card-content grey lighten-4">
						<div id="myPost">
						   <div id="postTemplete">
						   </div>
						   <div id="postPagination">
						   </div>
							{# {{ render(path('my_profile_posts',{id:user.id})) }} #}
							
						</div>
						<div id="myLikes">
						  <div id="likeTemplete">
						   </div>
							{# {{ render(path('my_profile_likes',{id:user.id})) }} #}
							
						</div>
						<div id="test">
						   <div id="commentTemplete">
						   </div>
							{# {{ render(path('my_profile_commented',{id:user.id})) }} #}
						</div>

					</div>
				</div>
			</div>
		</div>
		<div class="spinner hide">
			<div class="lds-spinner"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>
	    </div>		
 

	{% endblock %}
	{% block javascripts %}
		{{parent()}}
		
		<script>
				{# var modalelems = document.querySelectorAll('.modal');
			var modalinstances = M.Modal.init(modalelems, {}); #}

		let go =document.getElementById('go');
		let likePost =document.getElementById('likePost');
		let commentPost =document.getElementById('commentPost');

		let target=document.getElementById('postTemplete');
		let targetLike=document.getElementById('likeTemplete');
		let targetComment=document.getElementById('commentTemplete');

		let postPagination=document.getElementById('postPagination');
		let preloader=document.querySelector('.spinner');
		let fetchMyPost=(url)=>{
			 preloader.classList.remove('hide');
                 return  axios.get(url).then((response) => {
					preloader.classList.add('hide');
			     return response.data;

				}).catch((err) => {
				console.log(err);
				})
		}

       let urlPagePost="{{path('my_profile_posts',{id:user.id,'page':'pageId'}) }}";
       let urlPageLikes="{{path('my_profile_likes',{id:user.id,'page':'pageId'}) }}";
       let urlPageComment="{{path('my_profile_commented',{id:user.id,'page':'pageId'}) }}";

	 
	

		const handelEvent=(urlLoading,action)=>{
	      let pageId=1;
           const reload=async (urlLoading,action)=>{
   console.log(pageId)
           let urlLoadingUpdate=urlLoading.replace('pageId',pageId);
               console.log(urlLoadingUpdate);
		   
              let data=await fetchMyPost(urlLoadingUpdate);
			 var script = document.createElement("script");
             script.src = "https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js";
               
		       if(action.target.id=='go')
			   {
                 target.innerHTML=data.templete.content;
				  target.appendChild(script);
			   }
			  else  if(action.target.id=='likePost'){
                  targetLike.innerHTML=data.templete.content;
				  targetLike.appendChild(script);
			   }
			    else if(action.target.id=='commentPost'){
				   targetComment.innerHTML=data.templete.content;
				  targetComment.appendChild(script);
			   }
               
				  var modalelems = document.querySelectorAll('.modal');
			var modalinstances = M.Modal.init(modalelems, {});
				let pages=document.querySelectorAll(".pages");

         ////////////////////////////////////
             let likes = document.querySelectorAll('button.like');
			let unlikes = document.querySelectorAll('button.unlike');

			function handelLike(e) {
		     
			 {% if not app.user %}
			   return window.location.replace("{{path('account_login')}}");
			 {% endif %}
			 

                this.disabled=true
			let icon = this.querySelector('i');
			let likeCount = this.querySelector('#likeCount');
			this.parentElement.setAttribute('disabled', true);
			
			// let a=e.target.closest('a');
			let url = this.dataset.href;
         
			axios.get(url).then((response) => {
              this.disabled=false
		
			
			likeCount.innerText = response.data.likes;
			icon.innerText = response.data.message == 'added' ? 'favorite_border ' : 'favorite';

			}).catch((err) => {
			console.log(err)
			})

			e.preventDefault();
			}
			likes.forEach((el) => {
			el.addEventListener('click', handelLike);

			})
			unlikes.forEach((el) => {
			el.addEventListener('click', handelLike)
			})

		 //////////////////
			
		pages.forEach((el)=>{
			  
         el.addEventListener('click',async(event)=>{
            event.preventDefault();
			
			 if(event.target.tagName.toLowerCase() === 'a')
          {
			 
                   pageId=event.target.dataset.page;
           }
		   else{
                 pageId=event.target.closest('a').dataset.page;
		   }
		 	
			 
			
			 pages.forEach((element)=>{
				if(element.parentElement.classList.contains('active')){
					element.parentElement.classList.remove('active')
				}
			 })
			
			  

			  el.parentElement.classList.add('active');
			  
			 
              reload(urlLoading,action);
		})
		})
		   }
		   reload(urlLoading,action);
		   
		}
		go.addEventListener('click',handelEvent.bind(this,urlPagePost));
		likePost.addEventListener('click',handelEvent.bind(this,urlPageLikes));
		commentPost.addEventListener('click',handelEvent.bind(this,urlPageComment));
		
		go.click();

		
		</script>
	{% endblock %}
{# const params = new URLSearchParams(location.search);
		params.set('page', e.target.dataset.page);


		params.toString(); // => test=123&cheese=yummy
		window.history.replaceState({}, '', `${location.pathname}?${params.toString()}`); #}